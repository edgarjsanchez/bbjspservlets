class public Confirmacion

	method public void service(BBjspServletContext context!)
	
		declare BBjspWebRequest request!
		declare BBjspWebResponse response!
		
		use java.util.HashMap
		use ::jwt.bbj::Jwt

		request! = context!.getRequest()
		response! = context!.getResponse()
		path! = request!.getPathInfo()

		Rem Default es que no hay data valida
		res$="<html><h2>No se pudo confirmar su informacion. Contacte a su cooperativa.</h2></html>"
		status=400

		token! = path!.replace("/","")
		java.lang.System.out.println("Confirmacion token recibido: "+token!)
		
		REM Verificar token para sacar detalles del cliente
		claims! = Jwt.verify(token!)
		email$=claims!.get("email",err=*next)
		if email$="" then 
			java.lang.System.out.println(pgm(1)+"NO Email in token")
			goto response
		endif
		java.lang.System.out.println(pgm(1)+" Email: "+email$)

		sql$="select uid from login where email='"+email$+"' and token='"+token!+"' and confirmado=0"
		rs! = BBJAPI().createSQLRecordSet("NcusDB",modes$,sql$,BBjAPI.FALSE)
		existe=rs!.getRecordCount()
		rs!.close()
		if !existe then goto response
		
		while 1
			sql$="update login set confirmado=1 where email=? and token=?"
			SQLChan = SQLunt
			SQLOpen(SQLChan)"NcusDB"
			SQLPrep(SQLChan)sql$
			SQLExec(SQLChan,err=*break)email$, token!
			SQLClose(SQLChan)
			status = 200
			res$="<html><h2>Confirmacion Exitosa. Intente hacer login en su app.</h2></html>"
			break
		wend
		
		response:

		java.lang.System.out.println("Message returned: "+res$)
		response!.getOutputStream().write(res$)
		response!.setStatus(status)

	methodend

classend
