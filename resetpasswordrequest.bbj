class public Resetpasswordrequest

	method public void service(BBjspServletContext context!)
	
		declare BBjspWebRequest request!
		declare BBjspWebResponse response!

		use ::utils.bbj::Login
		use ::emailutil.bbj::Email
		use ::jwt.bbj::Jwt

		request! = context!.getRequest()
		response! = context!.getResponse()
		response!.setContentType("application/json")

		Rem Default es que no hay data valida
		e$="{""errors"": { ""global"": ""Informacion Invalida. \nContacte a su cooperativa.""} }"
		status=400

		body!=request!.getBody()
		
		if body! = null() then 
			java.lang.System.err.println("No body found in request. ")
			response!.getOutputStream().write("{""errors"": { ""global"": ""Informacion Invalida.""} }")
			response!.setStatus(400)
		endif

		java.lang.System.out.println("Body: "+body!)
		jsonO!= new org.json.JSONObject(body!)
		email!=jsonO!.get("data").get("email").toString()

		java.lang.System.out.println("Pedido de reset de password usando email "+email!)

		login! = new Login(email!)
		if login!.getexiste() then
			REM Crear JWT con expiracion de 15 minutos (90000 ms) para link de cambio de password.
			params! = new java.util.HashMap()
			params!.put("uid", login!.getuid().toString())
			params!.put("email", email!)
			jwt! = Jwt.sign(params!,90000)
		else
			response!.getOutputStream().write("{""errors"": { ""global"": ""Email Invalido.""} }")
			response!.setStatus(400)
			java.lang.System.out.println("Message returned: Email invalido")
			goto salida
		endif

		REM Enviar email con link a pantalla de cambio de password
		if Email.enviarEmailResetPassword(login!.getemail(), jwt!) then 
			response!.setStatus(200)
			goto salida
		else 
			java.lang.System.out.println("Envio de email fallo.")
			rem Aqui poner logica para manejar este caso
		endif

		response!.getOutputStream().write(e$)
		response!.setStatus(status)
		
	salida:
	methodend

classend

